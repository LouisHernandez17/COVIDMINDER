county <- covid_NY_TS_plot.cases$County[i]
yesterday <- as.Date(covid_NY_TS_plot.cases$date[i] - 1)
covid_NY_TS_plot.cases$diff[i] <- covid_NY_TS_plot.cases$diff[i] -
(covid_NY_TS_plot.cases %>%
filter(County == county & date == yesterday) %>%
select(cases))
if (length(covid_NY_TS_plot.cases$diff[[i]]) == 0) {
print("TRUE")
covid_NY_TS_plot.cases$diff[i] <- covid_NY_TS_plot.cases$cases[i]
}
}
covid_NY_TS_plot.cases <- covid_NY_TS_plot.cases %>%
dplyr::mutate(p_diff = (diff/Population)*100000)
covid_NY_TS_plot.cases <- covid_NY_TS_plot.cases %>%
mutate(p_diff = (diff/Population)*100000)
View(covid_NY_TS_plot.cases)
covid_NY_TS_plot.cases$diff <- covid_NY_TS_plot.cases$cases
covid_NY_TS_plot.cases$p_diff <- covid_NY_TS_plot.cases$p_cases
for(i in 1:nrow(covid_NY_TS_plot.cases)) {
county <- covid_NY_TS_plot.cases$County[i]
yesterday <- as.Date(covid_NY_TS_plot.cases$date[i] - 1)
covid_NY_TS_plot.cases$diff[i] <- covid_NY_TS_plot.cases$diff[i] -
(covid_NY_TS_plot.cases %>%
filter(County == county & date == yesterday) %>%
select(cases))
covid_NY_TS_plot.cases$p_diff[i] <- covid_NY_TS_plot.cases$p_diff[i] -
(covid_NY_TS_plot.cases %>%
filter(County == county & date == yesterday) %>%
select(p_cases))
if (length(covid_NY_TS_plot.cases$diff[[i]]) == 0) {
covid_NY_TS_plot.cases$diff[i] <- covid_NY_TS_plot.cases$cases[i]
}
if (length(covid_NY_TS_plot.cases$p_diff[[i]]) == 0) {
covid_NY_TS_plot.cases$p_diff[i] <- covid_NY_TS_plot.cases$p_cases[i]
}
}
?diff
?lag
?shift
?data.table::shift
View(covid_NY_TS_plot.cases)
covid_NY_TS_plot.cases %>% group_by(County) %>%
mutate(diff = ifelse(date - 1 == lag(date), cases - lag(x), cases))
covid_NY_TS_plot.cases %>% group_by(County) %>%
mutate(diff = ifelse(as.Date(date - 1) == lag(date), cases - lag(x), cases))
covid_NY_TS_plot.cases %>% group_by(County) %>%
mutate(diff = ifelse(as.Date(date - 1) == lag(date), cases - lag(cases), cases))
covid_NY_TS_plot.cases %>% group_by(County) %>%
mutate(diff = ifelse(as.Date(date - 1) == lag(date), cases - lag(cases), 0))
covid_NY_TS_plot.cases %>% group_by(County) %>%
mutate(diff = ifelse(as.Date(date - 1) == lag(date), cases - lag(cases), NA)) ->
covid_NY_TS_plot.cases
View(covid_NY_TS_plot.cases)
covid_NY_TS_plot.cases %>%
filter(is.na(diff))
covid_NY_TS_plot.cases %>%
filter(is.na(diff)) %>%
select(diff) <- cases
covid_NY_TS_plot.cases %>%
select(diff) %>%
replace_na(cases)
covid_NY_TS_plot.cases %>% group_by(County) %>%
mutate(diff = ifelse(as.Date(date - 1) == lag(date), cases - lag(cases), NA)) %>%
ungroup() -> covid_NY_TS_plot.cases
covid_NY_TS_plot.cases %>%
select(diff) %>%
replace_na(cases)
covid_NY_TS_plot.cases %>%
replace_na(cases)
covid_NY_TS_plot.cases %>%
mutate(p_diff = ifelse(as.Date(date - 1) == lag(date), p_cases - lag(p_cases), NA)) ->
covid_NY_TS_plot.cases
covid_NY_TS_plot.cases %>% group_by(County) %>%
mutate(diff = ifelse(as.Date(date - 1) == lag(date), cases - lag(cases), NA)) ->
covid_NY_TS_plot.cases
covid_NY_TS_plot.cases %>%
mutate(p_diff = ifelse(as.Date(date - 1) == lag(date), p_cases - lag(p_cases), NA)) ->
covid_NY_TS_plot.cases
View(covid_NY_TS_plot.cases)
covid_NY_TS_plot.cases %>%
mutate(p_diff = ifelse(as.Date(date - 1) == lag(date), p_cases - lag(p_cases), NA)) %>%
ungroup() -> covid_NY_TS_plot.cases
?mutate
covid_NY_TS_plot.cases %>%
filter(is.na(diff)) %>%
mutate(diff = cases) %>%
mutate(p_diff = p_cases)
covid_NY_TS_plot.cases %>%
filter(is.na(diff)) %>%
mutate(diff = cases) %>%
mutate(p_diff = p_cases) -> covid_NY_TS_plot.cases
covid_NY_TS_plot.cases %>% group_by(County) %>%
mutate(diff = ifelse(as.Date(date - 1) == lag(date), cases - lag(cases), NA)) ->
covid_NY_TS_plot.cases
covid_NY_TS_plot.cases %>%
mutate(p_diff = ifelse(as.Date(date - 1) == lag(date), p_cases - lag(p_cases), NA)) %>%
ungroup() -> covid_NY_TS_plot.cases
covid_NY_TS_plot.cases %>%
mutate(ifelse(is.na(diff), diff = cases, diff)) %>%
mutate(ifelse(is.na(p_diff), p_diff = p_cases, p_diff))
covid_NY_TS_plot.cases %>%
mutate(ifelse(is.na(diff), cases, diff)) %>%
mutate(ifelse(is.na(p_diff), p_cases, p_diff))
?ifelse
?replace
?replace_na
covid_NY_TS_plot.cases %>%
replace(diff, is.na(diff), cases)
covid_NY_TS_plot.cases %>%
replace(is.na(diff), cases)
covid_NY_TS_plot.cases %>%
replace(., is.na(diff), cases)
covid_NY_TS_plot.cases %>% group_by(County) %>%
mutate(diff = ifelse(as.Date(date - 1) == lag(date), cases - lag(cases), NA)) ->
covid_NY_TS_plot.cases
covid_NY_TS_plot.cases %>%
mutate(p_diff = ifelse(as.Date(date - 1) == lag(date), p_cases - lag(p_cases), NA)) %>%
ungroup() -> covid_NY_TS_plot.cases
covid_NY_TS_plot.cases %>% group_by(County) %>%
mutate(diff = ifelse(as.Date(date - 1) == lag(date), cases - lag(cases), NA)) ->
covid_NY_TS_plot.cases
View(covid_NY_TS_plot.cases)
covid_NY_TS_plot.cases <- read_csv("data/csv/time_series/covid_NY_TS_plot.cases.csv")
View(covid_NY_TS_plot.cases)
covid_NY_TS_plot.cases %>% group_by(County) %>%
mutate(diff = ifelse(as.Date(date - 1) == lag(date), cases - lag(cases), NA)) ->
covid_NY_TS_plot.cases
View(covid_NY_TS_plot.cases)
covid_NY_TS_plot.cases %>%
mutate(p_diff = ifelse(as.Date(date - 1) == lag(date), p_cases - lag(p_cases), NA)) %>%
ungroup() -> covid_NY_TS_plot.cases
View(covid_NY_TS_plot.cases)
covid_NY_TS_plot.cases$diff <- ifelse(is.na(covid_NY_TS_plot.cases$diff), covid_NY_TS_plot.cases$cases, covid_NY_TS_plot.cases$diff)
covid_NY_TS_plot.cases$p_diff <- ifelse(is.na(covid_NY_TS_plot.cases$p_diff), covid_NY_TS_plot.cases$p_cases, covid_NY_TS_plot.cases$p_diff)
covid_NY_TS_plot.cases <- read_csv("data/csv/time_series/covid_NY_TS_plot.cases.csv")
covid_NY_TS_plot.cases %>% group_by(County) %>%
mutate(diff = ifelse(as.Date(date - 1) == lag(date), cases - lag(cases), cases)) ->
covid_NY_TS_plot.cases
covid_NY_TS_plot.cases %>%
mutate(p_diff = ifelse(as.Date(date - 1) == lag(date), p_cases - lag(p_cases), p_cases)) %>%
ungroup() -> covid_NY_TS_plot.cases
View(covid_NY_TS_plot.cases)
covid_NY_TS_plot.cases$diff <- ifelse(is.na(covid_NY_TS_plot.cases$diff), covid_NY_TS_plot.cases$cases, covid_NY_TS_plot.cases$diff)
covid_NY_TS_plot.cases$p_diff <- ifelse(is.na(covid_NY_TS_plot.cases$p_diff), covid_NY_TS_plot.cases$p_cases, covid_NY_TS_plot.cases$p_diff)
library(tidyverse)
owidURL <- "https://covid.ourworldindata.org/data/owid-covid-data.csv"
download.file(owidURL, paste0("data/csv/", "owid_testing_raw.csv"))
todays_raw_owid_data <- read_csv(paste0("data/csv/", "owid_testing_raw.csv"))
View(todays_raw_owid_data)
todays_raw_owid_data %>% filter(iso_code == "DEU") %>%
select(iso_code, location, date, total_tests_per_thousand, new_tests_per_thousand) %>%
slice(which.max(as.Date(date, '%Y-%m-%d')))
todays_raw_owid_data <- todays_raw_owid_data %>%
select(iso_code, location, date, total_tests_per_thousand, new_tests_per_thousand) %>%
drop_na(total_tests_per_thousand, new_tests_per_thousand) %>%
group_by(iso_code) %>%
slice(which.max(as.Date(date, '%Y-%m-%d'))) %>%
arrange(desc(total_tests_per_thousand))
View(todays_raw_owid_data)
check_iso_codes <- c("PRT","ITA","RUS","USA","GBR","CAN","CHE")
check_raw_owid_data <- todays_raw_owid_data %>%
filter(iso_code %in% check_iso_codes)
View(check_raw_owid_data)
# Download states raw data
owidURL <- "https://covid.ourworldindata.org/data/owid-covid-data.csv"
download.file(owidURL, paste0("data/csv/", "owid_testing_raw.csv"))
# Make backup of existing data
write_csv(read_csv("data/csv/state_covid_testing.csv"),"data/csv/owid_covid_testing.csv.bak")
# Import raw into R
todays_raw_owid_data <- read_csv(paste0("data/csv/", "owid_testing_raw.csv"))
# Import raw into R
todays_raw_owid_data <- read_csv(paste0("data/csv/", "owid_testing_raw.csv"))
todays_raw_owid_data %>% filter(!is.na(total_tests_per_thousand))
View(todays_raw_owid_data)
raw_owid_data.total.test.rate <-todays_raw_owid_data %>%
filter(!is.na(total_tests_per_thousand)) %>%
select(iso_code, location, date, total_tests_per_thousand)
View(raw_owid_data.total.test.rate)
raw_owid_data.total.test.rate <-todays_raw_owid_data %>%
filter(!is.na(total_tests_per_thousand) & iso_code %in% check_iso_codes) %>%
select(iso_code, location, date, total_tests_per_thousand)
check_iso_codes <- c("PRT","ITA","RUS","USA","GBR","CAN","CHE", "DEU")
raw_owid_data.total.test.rate <-todays_raw_owid_data %>%
filter(!is.na(total_tests_per_thousand) & iso_code %in% check_iso_codes) %>%
select(iso_code, location, date, total_tests_per_thousand)
View(raw_owid_data.total.test.rate)
raw_owid_data.total.test.rate <-todays_raw_owid_data %>%
filter(!is.na(total_tests_per_thousand) & iso_code %in% check_iso_codes) %>%
select(iso_code, location, date, total_tests_per_thousand) %>%
group_by(iso_code) %>%
filter(date = max(date))
raw_owid_data.total.test.rate <-todays_raw_owid_data %>%
filter(!is.na(total_tests_per_thousand) & iso_code %in% check_iso_codes) %>%
select(iso_code, location, date, total_tests_per_thousand) %>%
group_by(iso_code) %>%
filter(date == max(date))
View(raw_owid_data.total.test.rate)
raw_owid_data.total.test.rate <-todays_raw_owid_data %>%
filter(!is.na(total_tests_per_thousand) & iso_code %in% check_iso_codes) %>%
select(iso_code, location, date, total_tests_per_thousand) %>%
group_by(iso_code) %>%
filter(date == max(date)) %>%
top_n(n=1)
View(raw_owid_data.total.test.rate)
owid_data.total.test.rate <-todays_raw_owid_data %>%
filter(!is.na(total_tests_per_thousand) & iso_code %in% check_iso_codes) %>%
select(iso_code, location, date, total_tests_per_thousand) %>%
group_by(iso_code) %>%
filter(date == max(date)) %>%
top_n(n=1)
# write out new dataframe to file system
write_csv(owid_data.total.test.rate,"data/csv/owid_glb_test_rates.csv")
rm(owid_data.total.test.rate)
todays_raw_owid_data <- read_csv(paste0("data/csv/", "owid_testing_raw.csv"))
todays_raw_owid_data <- read_csv(paste0("data/csv/", "owid_testing_raw.csv"))
todays_raw_owid_data %>% filter(location == "United States")
todays_raw_owid_data %>% filter(location == "Belgium")
todays_raw_owid_data %>% filter(location == "Portugal")
todays_raw_owid_data %>% filter(location == "Switzerland")
todays_raw_owid_data %>% filter(location == "Spain")
todays_raw_owid_data %>% filter(location == "Ireland")
todays_raw_owid_data %>% filter(location == "United Kingdom")
check_iso_codes2 <- c("USA","BEL","PRT","CHE","ITA","ESP","IRL","DEU","CAN","RUS","GBR")
owid_data.total.test.rate <-todays_raw_owid_data %>%
filter(!is.na(total_tests_per_thousand) & iso_code %in% check_iso_codes2) %>%
select(iso_code, location, date, total_tests_per_thousand) %>%
group_by(iso_code) %>%
filter(date == max(date)) %>%
top_n(n=1)
View(owid_data.total.test.rate)
write_csv(owid_data.total.test.rate,"data/csv/owid_glb_test_rates.csv")
rm(owid_data.total.test.rate)
total_test_rates.df <- read_csv("data/csv/owid_glb_test_rates.csv")
View(total_test_rates.df)
pUS.2 <- total_test_rates.df[total_test_rates.df$iso_code == "USA","total_tests_per_thousand"] / 1000
View(pUS.2)
total_test_rates.df[total_test_rates.df$iso_code == "USA",]
total_test_rates.df[total_test_rates.df$iso_code == "USA",]$total_tests_per_thousand
pUS.2 <- total_test_rates.df[total_test_rates.df$iso_code == "USA",]$total_tests_per_thousand / 1000
pUS.2 <- total_test_rates.df[total_test_rates.df$iso_code == "USA",]$total_tests_per_thousand / 1000
pPR.2 <- total_test_rates.df[total_test_rates.df$iso_code == "PRT",]$total_tests_per_thousand / 1000
pSP.2 <- total_test_rates.df[total_test_rates.df$iso_code == "ESP",]$total_tests_per_thousand / 1000
pBE.2 <- total_test_rates.df[total_test_rates.df$iso_code == "BEL",]$total_tests_per_thousand / 1000
pIT.2 <- total_test_rates.df[total_test_rates.df$iso_code == "ITA",]$total_tests_per_thousand / 1000
pRU.2 <- total_test_rates.df[total_test_rates.df$iso_code == "RUS",]$total_tests_per_thousand / 1000
pCH.2 <- total_test_rates.df[total_test_rates.df$iso_code == "CHE",]$total_tests_per_thousand / 1000
pDE.2 <- total_test_rates.df[total_test_rates.df$iso_code == "DEU",]$total_tests_per_thousand / 1000
pIR.2 <- total_test_rates.df[total_test_rates.df$iso_code == "IRL",]$total_tests_per_thousand / 1000
pCA.2 <- total_test_rates.df[total_test_rates.df$iso_code == "CAN",]$total_tests_per_thousand / 1000
pUK.2 <- total_test_rates.df[total_test_rates.df$iso_code == "GRB",]$total_tests_per_thousand / 1000
pUS.2 <- total_test_rates.df[total_test_rates.df$iso_code == "USA",]$total_tests_per_thousand / 1000
pPR.2 <- total_test_rates.df[total_test_rates.df$iso_code == "PRT",]$total_tests_per_thousand / 1000
pSP.2 <- total_test_rates.df[total_test_rates.df$iso_code == "ESP",]$total_tests_per_thousand / 1000
pBE.2 <- total_test_rates.df[total_test_rates.df$iso_code == "BEL",]$total_tests_per_thousand / 1000
pIT.2 <- total_test_rates.df[total_test_rates.df$iso_code == "ITA",]$total_tests_per_thousand / 1000
pRU.2 <- total_test_rates.df[total_test_rates.df$iso_code == "RUS",]$total_tests_per_thousand / 1000
pCH.2 <- total_test_rates.df[total_test_rates.df$iso_code == "CHE",]$total_tests_per_thousand / 1000
pDE.2 <- total_test_rates.df[total_test_rates.df$iso_code == "DEU",]$total_tests_per_thousand / 1000
pIR.2 <- total_test_rates.df[total_test_rates.df$iso_code == "IRL",]$total_tests_per_thousand / 1000
pCA.2 <- total_test_rates.df[total_test_rates.df$iso_code == "CAN",]$total_tests_per_thousand / 1000
pUK.2 <- total_test_rates.df[total_test_rates.df$iso_code == "GBR",]$total_tests_per_thousand / 1000
runApp()
?round
runApp()
source("data_downloaders/cpt_downloader.R")
source("data_downloaders/jhu_downloader.R")
source("data_downloaders/jhu_ts_downloader.R")
source("data_downloaders/jhu_ny_ts_downloader.R")
source("data_downloaders/cdc_downloader.R")
source("data_downloaders/owid_downloader.R")
View(owid_data.total.test.rate)
shiny::runApp()
shiny::runApp()
getwd()
shiny::runApp()
runApp()
shiny::runApp()
runApp()
source("data_downloaders/cpt_downloader.R")
source("data_downloaders/jhu_downloader.R")
source("data_downloaders/jhu_ts_downloader.R")
source("data_downloaders/jhu_ny_ts_downloader.R")
source("data_downloaders/cdc_downloader.R")
source("data_downloaders/owid_downloader.R")
View(oowid_data.total.test.rate)
View(owid_data.total.test.rate)
runApp()
runApp()
?format
shiny::runApp()
source("data_downloaders/cpt_downloader.R")
source("data_downloaders/jhu_downloader.R")
source("data_downloaders/jhu_ts_downloader.R")
source("data_downloaders/jhu_ny_ts_downloader.R")
source("data_downloaders/cdc_downloader.R")
source("data_downloaders/owid_downloader.R")
View(owid_data.total.test.rate)
shiny::runApp()
shiny::runApp()
runApp()
runApp()
covid_NY_TS_plot.cases %>%
group_by(Region, date) %>%
summarise(p_diff = sum(p_diff)) %>%
mutate(ma = c(numeric(moving.avg.window-1), zoo::rollmean(p_diff, moving.avg.window, align = "right")))%>%
filter(ma > 0) %>% View()
moving.avg.window <- 7
covid_NY_TS_plot.cases %>%
group_by(Region, date) %>%
summarise(p_diff = sum(p_diff)) %>%
mutate(ma = c(numeric(moving.avg.window-1), zoo::rollmean(p_diff, moving.avg.window, align = "right")))%>%
filter(ma > 0) %>% View()
runApp()
runApp()
?format
runApp()
runApp()
runApp()
runApp()
?column
runApp()
runApp()
runApp()
?renderPrint
runApp()
runApp()
source("data_downloaders/cpt_downloader.R")
source("data_downloaders/jhu_downloader.R")
source("data_downloaders/jhu_ts_downloader.R")
source("data_downloaders/jhu_ny_ts_downloader.R")
source("data_downloaders/cdc_downloader.R")
source("data_downloaders/owid_downloader.R")
View(owid_data.total.test.rate)
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
covid_NY_TS_plot.cases %>%
group_by(County) %>%
mutate(y = p_cases)
filter(y >= 10) %>% View()
covid_NY_TS_plot.cases %>%
group_by(County) %>%
mutate(y = p_cases) %>%
filter(y >= 10) %>% View()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
?enableBookmarking
?shinyApp
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
# Script for executing downloaders, in order
# NOTE: jhu_downloader.R now self-calculates correct date
# NOTE: Don't forget to 'git add' afterwards!
source("data_downloaders/cpt_downloader.R")
source("data_downloaders/jhu_downloader.R")
source("data_downloaders/jhu_ts_downloader.R")
source("data_downloaders/jhu_ny_ts_downloader.R")
source("data_downloaders/cdc_downloader.R")
source("data_downloaders/owid_downloader.R")           # Run for up to date testing numbers.
#source("data_downloaders/jhu_ts_downloader_malik.R")   # Experimental; Malik's structures
View(owid_data.total.test.rate)
source("data_downloaders/cpt_downloader.R")
source("data_downloaders/cpt_downloader.R")
source("data_downloaders/jhu_downloader.R")
source("data_downloaders/cpt_downloader.R")
source("data_downloaders/jhu_downloader.R")
source("data_downloaders/jhu_ts_downloader.R")
source("data_downloaders/jhu_ny_ts_downloader.R")
source("data_downloaders/cdc_downloader.R")
source("data_downloaders/owid_downloader.R")
View(owid_data.total.test.rate)
source("data_downloaders/owid_downloader.R")
View(owid_data.total.test.rate)
source("data_downloaders/owid_downloader.R")
source("data_downloaders/owid_downloader.R")
source("data_downloaders/owid_downloader.R")
View(owid_data.total.test.rate)
source("data_downloaders/cpt_downloader.R")
source("data_downloaders/jhu_downloader.R")
source("data_downloaders/jhu_ts_downloader.R")
source("data_downloaders/jhu_ny_ts_downloader.R")
source("data_downloaders/cdc_downloader.R")
source("data_downloaders/owid_downloader.R")
View(owid_data.total.test.rate)
runApp()
runApp()
runApp()
runApp()
View(covid_NY_TS_plot.plots)
View(covid_NY_TS_plot.plot)
View(covid_NY_TS_plot.cases)
View(states)
colnames(states)
states$obesity_rate_ldi
states[,obesity_rate_ldi]
states[,"obesity_rate_ldi"]
states[,c("NAME",obesity_rate_ldi")]
;
]
)
states[,c("NAME","obesity_rate_ldi")]
runApp()
runApp()
source("modules/Source.R")
source("modules/data_load.R")
obesity_data_states
owidURL.ob <- "blob:https://ourworldindata.org/22ff16a3-c754-4bfe-9acc-69ab6a0a0848"
download.file(owidURL.ob, paste0("data/csv", "owid_obesity_per.csv"))
read.csv(owidURL.ob
)
raw_owid_data.ob <- read_csv(paste0("data/csv/", "share-of-deaths-obesity.csv"))
owid_data.obesity.rate <- raw_owid_data.ob %>%
filter(Code %in% check_iso_codes2) %>%
group_by(Code) %>%
filter(year == max(year)) %>%
top_n(n=1)
check_iso_codes2 <- c("USA","BEL","PRT","CHE","ITA","ESP","IRL","DEU","CAN","RUS","GBR")
owid_data.obesity.rate <- raw_owid_data.ob %>%
filter(Code %in% check_iso_codes2) %>%
group_by(Code) %>%
filter(year == max(year)) %>%
top_n(n=1)
owid_data.obesity.rate <- raw_owid_data.ob %>%
filter(Code %in% check_iso_codes2) %>%
group_by(Code) %>%
filter(Year == max(Year)) %>%
top_n(n=1)
View(owid_data.obesity.rate)
raw_owid_data.ob <- read_csv(paste0("data/csv/", "share-of-adults-defined-as-obese.csv"))
owid_data.obesity.rate <- raw_owid_data.ob %>%
filter(Code %in% check_iso_codes2) %>%
group_by(Code) %>%
filter(Year == max(Year)) %>%
top_n(n=1)
View(owid_data.obesity.rate)
write_csv(owid_data.obesity.rate,"data/csv/owid_obese_pct_2016.csv")
View(owid_data.obesity.rate)
colnames(owid_data.obesity.rate) <- c("Entity", "Code", "Year", "Pct_obese_adult")
owid_data.obesity.rate %>% filter(Code == "PRT") %>% select(Pct_obese_adult)
owid_data.obesity.rate %>% filter(Code == "PRT") %>% select(Pct_obese_adult)[1,]
(owid_data.obesity.rate %>% filter(Code == "PRT") %>% select(Pct_obese_adult))[1,]
(owid_data.obesity.rate %>% filter(Code == "PRT") %>% select(Pct_obese_adult))[,1]
(owid_data.obesity.rate %>% filter(Code == "PRT") %>% select(Pct_obese_adult))[,2]
(owid_data.obesity.rate %>% filter(Code == "PRT") %>% select(Pct_obese_adult))[[,2]]
(owid_data.obesity.rate %>% filter(Code == "PRT") %>% select(Pct_obese_adult))[[,1]]
(owid_data.obesity.rate %>% filter(Code == "PRT") %>% select(Pct_obese_adult))[[1]]
(owid_data.obesity.rate %>% filter(Code == "PRT") %>% select(Pct_obese_adult))[[2]]
pPR.9.obesity <- (owid_data.obesity.rate %>% filter(Code == "PRT") %>% select(Pct_obese_adult))[[2]]
(owid_data.obesity.rate %>% filter(Code == "PRT"))$Pct_obese_adult
pPR.9.obesity <- (owid_data.obesity.rate %>% filter(Code == "PRT"))$Pct_obese_adult
pSP.8.obesity <- (owid_data.obesity.rate %>% filter(Code == "ESP"))$Pct_obese_adult
pBE.8.obesity <- (owid_data.obesity.rate %>% filter(Code == "BEL"))$Pct_obese_adult
pIT.8.obesity <- (owid_data.obesity.rate %>% filter(Code == "ITA"))$Pct_obese_adult
pRU.8.obesity <- (owid_data.obesity.rate %>% filter(Code == "RUS"))$Pct_obese_adult
pCH.8.obesity <- (owid_data.obesity.rate %>% filter(Code == "CHE"))$Pct_obese_adult
pDE.8.obesity <- (owid_data.obesity.rate %>% filter(Code == "DEU"))$Pct_obese_adult
pIR.8.obesity <- (owid_data.obesity.rate %>% filter(Code == "IRL"))$Pct_obese_adult
pCA.8.obesity <- (owid_data.obesity.rate %>% filter(Code == "CAN"))$Pct_obese_adult
pUK.8.obesity <- (owid_data.obesity.rate %>% filter(Code == "GBR"))$Pct_obese_adult
country_obesity_choices <- c("us","pr","sp","be","ch","it","ru","ir","de","ca","uk")
runApp()
runApp()
runApp()
runApp()
View(states)
states[,c("NAME","pct_Adults_with_Obesity")]
summary(states[,c("NAME","pct_Adults_with_Obesity")])
runApp()
runApp()
runApp()
runApp()
runApp()
?column
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
